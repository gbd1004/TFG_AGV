@misc{rfc3339,
    series =    {Request for Comments},
    number =    3339,
    howpublished =  {RFC 3339},
    publisher = {RFC Editor},
    doi =       {10.17487/RFC3339},
    url =       {https://www.rfc-editor.org/info/rfc3339},
        author =    {Chris Newman and Graham Klyne},
    title =     {{Date and Time on the Internet: Timestamps}},
    pagetotal = 18,
    year =      2002,
    month =     jul,
    abstract =  {This document defines a date and time format for use in Internet protocols that is a profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.},
}

@book{10.5555/3364297,
  author = {Meier, Andreas and Kaufmann, Michael},
  title = {SQL \& NoSQL Databases: Models, Languages, Consistency Options and Architectures for Big Data Management},
  year = {2019},
  isbn = {3658245484},
  publisher = {Springer Vieweg},
  abstract = {This book offers a comprehensive introduction to relational (SQL) and non-relational (NoSQL) databases. The authors thoroughly review the current state of database tools and techniques, and examine coming innovations. The book opens with a broad look at data management, including an overview of information systems and databases, and an explanation of contemporary database types: SQL and NoSQL databases, and their respective management systems The nature and uses of Big Data A high-level view of the organization of data management Data Modeling and Consistency Chapter-length treatment is afforded Data Modeling in both relational and graph databases, including enterprise-wide data architecture, and formulas for database design. Coverage of languages extends from an overview of operators, to SQL and and QBE (Query by Example), to integrity constraints and more. A full chapter probes the challenges of Ensuring Data Consistency, covering: Multi-User Operation Troubleshooting Consistency in Massive Distributed Data Comparison of the ACID and BASE consistency models, and more System Architecture also gets from its own chapter, which explores Processing of Homogeneous and Heterogeneous Data; Storage and Access Structures; Multi-dimensional Data Structures and Parallel Processing with MapReduce, among other topics. Post-Relational and NoSQL Databases The chapter on post-relational databases discusses the limits of SQL – and what lies beyond, including Multi-Dimensional Databases, Knowledge Bases and and Fuzzy Databases. A final chapter covers NoSQL Databases, along with Development of Non-Relational Technologies, Key-Value, Column-Family and Document Stores XML Databases and Graphic Databases, and more The book includes more than 100 tables, examples and illustrations, and each chapter offers a list of resources for further reading. SQL & NoSQL Databases conveys the strengths and weaknesses of relational and non-relational approaches, and shows how to undertake development for big data applications. The book benefits readers including students and practitioners working across the broad field of applied information technology. This textbook has been recommended and developed for university courses in Germany, Austria and Switzerland.}
}

@misc{ influx:timeseries,
    author = "InfluxData",
    title = "What is time series data?",
    url = "https://www.influxdata.com/what-is-time-series-data/",
    note = "[Internet; read on 22-march-2023]"
}

@InProceedings{10.1007/978-3-030-50426-7_28,
author="Grzesik, Piotr
and Mrozek, Dariusz",
editor="Krzhizhanovskaya, Valeria V.
and Z{\'a}vodszky, G{\'a}bor
and Lees, Michael H.
and Dongarra, Jack J.
and Sloot, Peter M. A.
and Brissos, S{\'e}rgio
and Teixeira, Jo{\~a}o",
title="Comparative Analysis of Time Series Databases in the Context of Edge Computing for Low Power Sensor Networks",
booktitle="Computational Science -- ICCS 2020",
year="2020",
publisher="Springer International Publishing",
address="Cham",
pages="371--383",
abstract="Selection of an appropriate database system for edge IoT devices is one of the essential elements that determine efficient edge-based data analysis in low power wireless sensor networks. This paper presents a comparative analysis of time series databases in the context of edge computing for IoT and Smart Systems. The research focuses on the performance comparison between three time-series databases: TimescaleDB, InfluxDB, Riak TS, as well as two relational databases, PostgreSQL and SQLite. All selected solutions were tested while being deployed on a single-board computer, Raspberry Pi. For each of them, the database schema was designed, based on a data model representing sensor readings and their corresponding timestamps. For performance testing, we developed a small application that was able to simulate insertion and querying operations. The results of the experiments showed that for presented scenarios of reading data, PostgreSQL and InfluxDB emerged as the most performing solutions. For tested insertion scenarios, PostgreSQL turned out to be the fastest. Carried out experiments also proved that low-cost, single-board computers such as Raspberry Pi can be used as small-scale data aggregation nodes on edge device in low power wireless sensor networks, that often serve as a base for IoT-based smart systems.",
isbn="978-3-030-50426-7"
}

@misc{ dbengines:rankingTSDBMS,
    author = "DB-Engines",
    year = "2023",
    month = "March",
    title = "DB-Engines Ranking of Time Series DBMS",
    url = "https://db-engines.com/en/ranking/time+series+dbms",
    note = "[Internet; read on 22-march-2023]"
}

@misc{graphite-functions,
	title = {{Functions — Graphite 1.2.0 documentation}},
	url = {https://graphite.readthedocs.io/en/latest/functions.html},
  author = {{Chris Davis}}
}

@misc{timescale-forecasting,
	title = {{Timescale Documentation | Time-series forecasting}},
	url = {https://docs.timescale.com/tutorials/latest/time-series-forecast/},
  author = {{Timescale}}
}

@misc { prom:pushgateway,
    author = "Prometheus community",
    title = "Prometheus Pushgateway",
    url = "https://github.com/prometheus/pushgateway#readme",
    note = "[Internet; read on 26-april-2023]"
}

@misc{ influx:consistency,
    author = "InfluxData",
    title = "InfluxDB design principles",
    url = "https://docs.influxdata.com/influxdb/cloud/reference/key-concepts/design-principles/",
    note = "[Internet; read on 22-march-2023]"
}

@electronic{Web:Grafana:Docs,
  added-at = {2019-09-19T14:31:19.000+0200},
  author = {{Grafana Labs}},
  biburl = {https://www.bibsonomy.org/bibtex/25ed23a00bc5511815c7cf2a016185e4d/bcoldewey},
  interhash = {b98128e5fc7c1186e7a1454ab35dd859},
  intrahash = {5ed23a00bc5511815c7cf2a016185e4d},
  keywords = {data grafana graph statistics visualisation},
  timestamp = {2019-09-19T14:32:15.000+0200},
  title = {Grafana Documentation},
  url = {https://grafana.com/docs/},
  urldate = {2019-07-25},
  year = 2018
}

@misc{git,
  author       = {Git},
  url          = {https://git-scm.com/},
  title        = {git},
  year         = {2023}
}

@misc{docker-pag,
  author       = {Docker},
  url          = {https://www.docker.com/},
  title        = {Docker},
  year         = {2023}
}

@misc{compose,
  author       = {Docker},
  url = {https://docs.docker.com/compose/},
  title        = {Docker Compose overview},
  year         = {2023}
}

@misc{nvidia-docker,
  author       = {Nvidia},
  url = {https://github.com/NVIDIA/nvidia-docker},
  title        = {nvidia-docker},
  year         = {2023}
}

@manual{python310,
  title={{Python: A dynamic, open source programming language}},
  author={{Python Core Team}},
  organization={{Python Software Foundation}},
  year={2019},
  url={https://www.python.org/},
  note={Python version 3.10}
}

@misc{influx:docker,
  author       = {InfluxData},
  url          = {https://hub.docker.com/_/influxdb},
  title        = {DockerHub - InfluxDB},
  year         = {2023}
}

@misc{cuda-compatibility,
  author       = {Nvidia},
  url = {https://docs.nvidia.com/deploy/cuda-compatibility/index.html},
  title        = {CUDA compatibility},
  year         = {2023}
}

@misc{influx:requirements,
  author       = {InfluxData},
  url = {https://docs.influxdata.com/influxdb/v1.8/guides/hardware_sizing/#influxdb-oss-guidelines},
  title        = {InfluxDB OSS guidelines},
  year         = {2023}
}

@misc{uml:deploy,
  author       = {Kirill Fakhroutdinov},
  url          = {https://www.uml-diagrams.org/deployment-diagrams.html},
  title        = {UML Deployment Diagrams},
  year         = {2023}
}